generator client {
  provider      = "prisma-client-js"
  //output        = "./node_modules/@prisma/client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  price       Float
  image       String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  stock       Int
  type        String?
  saleItems   SaleItem[]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sales     Sale[]

  @@map("users")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   String?
  sales     Sale[]

  @@map("customers")
}

model Sale {
  id            Int        @id @default(autoincrement())
  total         Float
  paymentAmount Float
  change        Float
  paymentMethod String     @default("Cash")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  userId        Int
  customerId    Int?
  companyId     String
  invoiceNumber String?    @unique
  subtotal      Float
  taxAmount     Float
  taxRate       Float
  items         SaleItem[]
  company       Company    @relation(fields: [companyId], references: [id])
  customer      Customer?  @relation(fields: [customerId], references: [id])
  user          User       @relation(fields: [userId], references: [id])

  @@map("sales")
}

model SaleItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Float
  saleId    Int
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  sale      Sale    @relation(fields: [saleId], references: [id], onDelete: Cascade)

  @@map("sale_items")
}

model Company {
  id                 String   @id @default(cuid())
  name               String
  registrationNumber String   @map("registration_number")
  email              String   @unique
  phone              String?
  currency           String   @default("USD")
  timezone           String   @default("America/Bogota")
  logo               String?
  street             String
  city               String
  state              String   @map("region_province")
  postalCode         String   @map("postal_code")
  country            String
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")
  sales              Sale[]

  @@map("companies")
}

model Currency {
  id                Int      @id @default(autoincrement())
  code              String   @unique
  name              String
  symbol            String
  precision         Int      @default(2)
  thousandSeparator String   @default(",")
  decimalSeparator  String   @default(".")
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("currencies")
}

model Tax {
  id        Int      @id @default(autoincrement())
  name      String
  rate      Float
  isActive  Boolean  @default(true)
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("taxes")
}
